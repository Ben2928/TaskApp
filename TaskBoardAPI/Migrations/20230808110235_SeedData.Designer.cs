// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskBoardAPI.Data;

#nullable disable

namespace TaskBoardAPI.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20230808110235_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskBoardAPI.Data.Entities.WorkTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WorkTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8427),
                            Description = "Description for Task 1",
                            Status = 1,
                            Title = "Task 1",
                            UpdatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8429)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8430),
                            Description = "Description for Task 2",
                            Status = 2,
                            Title = "Task 2",
                            UpdatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8431)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8432),
                            Description = "Description for Task 3",
                            Status = 0,
                            Title = "Task 3",
                            UpdatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8433)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8434),
                            Description = "Description for Task 4",
                            Status = 1,
                            Title = "Task 4",
                            UpdatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8434)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8435),
                            Description = "Description for Task 5",
                            Status = 2,
                            Title = "Task 5",
                            UpdatedDate = new DateTime(2023, 8, 8, 11, 2, 35, 912, DateTimeKind.Utc).AddTicks(8436)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
